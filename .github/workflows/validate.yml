name: Validate

on:
  push:
    branches:
      - main
    paths:
      - "contributors/**"
      - "repos/**"
      - "teams/**"
      - "meta/validators/governance/**"
      - ".taplo.toml"
      - ".editorconfig"
      - ".github/workflows/validate.yml"
      - "Cargo.lock"
      - "Cargo.toml"
  pull_request:
    paths:
      - "contributors/**"
      - "repos/**"
      - "teams/**"
      - "meta/validators/governance/**"
      - ".taplo.toml"
      - ".editorconfig"
      - ".github/workflows/validate.yml"
      - "Cargo.lock"
      - "Cargo.toml"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  validate-editorconfig:
    name: Check EditorConfig Compliance
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install EditorConfig Checker
        uses: taiki-e/install-action@v2
        with:
          tool: editorconfig-checker
          fallback: none

      - name: Check EditorConfig Compliance
        run: editorconfig-checker --exclude LICENSE

  validate-toml:
    name: Validate TOML Files
    needs: validate-editorconfig
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Taplo
        uses: taiki-e/install-action@v2
        with:
          tool: taplo
          fallback: none

      - name: Validate TOML Formatting
        run: taplo fmt --check

      - name: Validate TOML Against Schemas
        run: taplo check

  validate-rules:
    name: Validate Governance Rules
    needs: validate-toml
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Run Governance Validator
        run: cargo run --release --bin governance
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
